{"version":3,"sources":["accordions.js","cards.js","controlbar.js","leftSidebar.js","miscellaneous.js","navs.js","output-bindings.js","userMessages.js"],"names":["accordionBinding","Shiny","InputBinding","$","extend","find","scope","getValue","el","activeItem","index","setValue","value","removeClass","children","eq","addClass","click","trigger","receiveMessage","data","this","subscribe","callback","on","e","closest","hasClass","unsubscribe","off","inputBindings","register","status_2_color","status","color_2_status","color","boxBinding","config","parent","id","JSON","parse","html","visible","isCollapsed","css","collapsible","collapsed","closable","solidHeader","background","width","height","_updateWidth","o","n","toggleClass","action","isUserCard","isSocialCard","options","hasOwnProperty","title","newTitle","parseHTML","tools","btns","replaceWith","length","insertAfter","gradient","prepend","statusTarget","newBoxClass","undefined","header","remove","append","stringify","show","console","warn","toggleBox","removeBox","event","setTimeout","boxSidebarBinding","initialize","transition","attr","parseInt","closeTranslationRate","contacts","openTranslationRate","transform","boxWrapper","self","target","currentTarget","flipBoxBinding","currentSide","_clickOnFront","-webkit-transform","_clickOnBack","controlbarBinding","controlbarCollapsed","overlay","AdminLTE","controlSidebarOptions","slide","window","hide","ensureActivatedTab","$tablinks","$startTab","filter","first","tab","tabItemInputBinding","each","_getTabName","anchor","sidebarCollapsedInputBinding","toggleValue","newVal","sidebarmenuExpandedInputBinding","$open","icon","prev","$obj","document","$menu","next","not","inputBinding","$slideToTop","position","bottom","right","font-size","line-height","text-align","background-color","cursor","border-radius","z-index","opacity","display","scroll","scrollTop","is","fadeIn","fadeOut","animate","mySkins","changeSkin","cls","name","val","i","Storage","localStorage","setItem","alert","navPillsBinding","menuOutputBinding","OutputBinding","onValueError","err","unbindAll","renderError","renderValue","dependencies","deps","$html","renderHtml","className","initializeInputs","bindAll","outputBindings","addCustomMessageHandler","message","text","content","body","newMessageWrapper","newMessage","author","date","image","type","d","Date","month","getMonth","day","getDate","today","getFullYear"],"mappings":"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","file":"shinydashboardPlus.min.js","sourceRoot":"../../shinydashboardPlus-build","sourcesContent":["// accordion\n// ------------------------------------------------------------------\n// This code creates an input binding for the accordion component\nvar accordionBinding = new Shiny.InputBinding();\n\n$.extend(accordionBinding, {\n  find: function(scope) {\n    return $(scope).find(\".box-group.accordion\");\n  },\n  // Given the DOM element for the input, return the value\n  getValue: function(el) {\n    // active is given by the setValue method\n    var activeItem =\n      $(el)\n        .find(\".active\")\n        .index() + 1;\n    if (activeItem === 0) return;\n    // returns the index of the active item from the R point of view. It is possible\n    // that no item is shown at start. In this case,  NULL is returned\n    return activeItem;\n  },\n\n  setValue: function(el, value) {\n    // remove active class from all other panels\n    $(el)\n      .find(\".active\")\n      .removeClass(\"active\");\n\n    // add active class to current panel\n    $(el)\n      .children()\n      .eq(value - 1)\n      .addClass(\"active\");\n\n    // click on the header to trigger a collapse\n    $(el)\n      .children()\n      .eq(value - 1)\n      .find('[data-toggle=\"collapse\"]')\n      .click();\n\n    // trigger change to tell Shiny to update the value\n    $(el).trigger(\"change\");\n  },\n\n  // see updateAccordion\n  receiveMessage: function(el, data) {\n    this.setValue(el, data);\n  },\n\n  subscribe: function(el, callback) {\n    // cf setValue\n    $(el).on(\"change\", function(e) {\n      callback();\n    });\n\n    // manual click will update\n    $(el)\n      .find('[data-toggle=\"collapse\"]')\n      .on(\"click\", function(e) {\n        if (\n          !$(this)\n            .closest(\".panel\")\n            .hasClass(\"active\")\n        ) {\n          $(el)\n            .find(\".active\")\n            .removeClass(\"active\");\n        }\n        $(this)\n          .closest(\".panel\")\n          .addClass(\"active\");\n        callback();\n      });\n  },\n\n  unsubscribe: function(el) {\n    $(el).off(\".accordionBinding\");\n  }\n});\n\nShiny.inputBindings.register(accordionBinding, \"accordion-input\");\n","\nconst status_2_color = (status) => {\n  switch (status) {\n    case 'primary':\n      return 'light-blue';\n      break;\n    case 'success':\n      return 'green';\n      break;\n    case 'danger':\n      return 'red';\n      break;\n    case 'warning':\n      return 'yellow';\n      break;\n    case 'info':\n      return 'aqua';\n      break;\n    case 'navy':\n      return 'navy';\n      break;\n    case 'teal':\n      return 'teal';\n      break;\n    case 'purple':\n      return 'purple';\n      break;\n    case 'orange':\n      return 'orange';\n      break;\n    case 'maroon':\n      return 'maroon';\n      break;\n    case 'black':\n      return 'black';\n      break;\n  }\n}\n\n\n\nconst color_2_status = (color) => {\n  switch (color) {\n    case 'light-blue':\n      return 'primary';\n      break;\n    case 'green':\n      return 'success';\n      break;\n    case 'red':\n      return 'danger';\n      break;\n    case 'yellow':\n      return 'warning';\n      break;\n    case 'aqua':\n      return 'info';\n      break;\n    case 'navy':\n      return 'navy';\n      break;\n    case 'teal':\n      return 'teal';\n      break;\n    case 'purple':\n      return 'purple';\n      break;\n    case 'orange':\n      return 'orange';\n      break;\n    case 'maroon':\n      return 'maroon';\n      break;\n    case 'black':\n      return 'black';\n      break;\n  }\n}\n// boxBinding\n// ------------------------------------------------------------------\n// This code creates an input binding for the boxPlus component\nvar boxBinding = new Shiny.InputBinding();\n$.extend(boxBinding, {\n  find: function(scope) {\n    return $(scope).find(\".box\");\n  },\n  getValue: function(el) {\n    var config = $(el)\n      .parent()\n      .find(\"script[data-for='\" + el.id + \"']\");\n    config = JSON.parse(config.html());\n\n    var isCollapsed = $(el).hasClass(\"collapsed-box\");\n    var display = $(el).css(\"display\");\n\n    var visible;\n    if (display === \"none\") {\n      visible = false;\n    } else {\n      visible = true;\n    }\n    return {\n      collapsible: config.collapsible,\n      collapsed: isCollapsed,\n      closable: config.closable,\n      visible: visible,\n      status: config.status,\n      solidHeader: config.solidHeader,\n      background: config.background,\n      width: config.width,\n      height: config.height\n    }; // this will be a list in R\n  },\n  _updateWidth: function(el, o, n) {\n    $(el)\n      .parent()\n      .toggleClass(\"col-sm-\" + o);\n    $(el)\n      .parent()\n      .addClass(\"col-sm-\" + n);\n    // trigger resize so that output resize\n    $(el).trigger(\"resize\");\n  },\n  setValue: function(el, value) {\n    var config = $(el)\n      .parent()\n      .find(\"script[data-for='\" + el.id + \"']\");\n    config = JSON.parse(config.html());\n\n    if (value.action === \"update\") {\n      var isUserCard = $(el).hasClass(\"user-card\");\n      var isSocialCard = $(el).hasClass(\"social-card\");\n\n      // handle HTML tags (harder)\n      if (value.options.hasOwnProperty(\"title\")) {\n        if (value.options.title !== config.title) {\n          var newTitle = $.parseHTML(value.options.title);\n          var tools = $(el).find(\".box-tools\");\n          if (value.options.status !== config.status) {\n            var btns = $(tools).find(\".btn\");\n            // remove any existing background\n            $(btns).removeClass(\"btn-\" + config.status);\n            // apply new background\n            if (config.background !== null) {\n              $(btns)\n                .find(\".btn\")\n                .addClass(\"btn-\" + config.background);\n            }\n          }\n          // social box\n          if (isSocialCard) {\n            $(el)\n              .find(\".user-block\")\n              .replaceWith($(newTitle));\n          } else if (isUserCard) {\n            // handle 2 cards types\n            if (newTitle.length === 3) {\n              // don't take newTitle[1] (contains some text)\n              newTitle = [newTitle[0], newTitle[2]];\n              // change widget-use class\n              $(el)\n                .removeClass(\"widget-user-2\")\n                .addClass(\"widget-user\");\n              // insert header and image after\n              $(el)\n                .find(\".widget-user-header\")\n                .replaceWith($(newTitle[0]));\n              $(newTitle[1]).insertAfter($(el).find(\".widget-user-header\"));\n            } else {\n              $(el)\n                .removeClass(\"widget-user\")\n                .addClass(\"widget-user-2\");\n              $(el)\n                .find(\".widget-user-header\")\n                .replaceWith($(newTitle));\n            }\n\n            // add background color\n            if (value.options.status !== null) {\n              if (value.options.gradient) {\n                $(el)\n                  .find(\".widget-user-header\")\n                  .addClass(\"bg-\" + value.options.status + \"-gradient\");\n              } else {\n                $(el)\n                  .find(\".widget-user-header\")\n                  .addClass(\"bg-\" + value.options.status);\n              }\n            }\n\n            // add tools as first child of widget-user-header\n            $(el)\n              .find(\".widget-user-header\")\n              .prepend($(tools));\n          } else {\n            if (!$(newTitle).hasClass(\"box-title\"))\n              $(newTitle).addClass(\"box-title\");\n            $(el)\n              .find(\".box-title\")\n              .replaceWith($(newTitle));\n          }\n        }\n      }\n\n      // To remove status explicitly set status = NULL in updateBox. Don't apply\n      // to socialBox in AdminLTE2!!!\n      if (value.options.hasOwnProperty(\"status\")) {\n        if (!isSocialCard) {\n          if (value.options.status !== config.status) {\n            var statusTarget = $(el);\n            var oldClass, newClass;\n            if (isUserCard) {\n              statusTarget = $(statusTarget).find(\".widget-user-header\");\n              oldClass = \"bg-\" + config.status;\n              newClass = \"bg-\" + value.options.status;\n              \n              // update class if gradient\n              if (value.options.gradient || config.gradient) {\n                oldClass = oldClass + \"-gradient\";\n                newClass = newClass + \"-gradient\";\n              }\n              \n            } else {\n              oldClass = \"box-\" + config.status;\n              newClass = \"box-\" + value.options.status;\n            }\n\n            // don't touch if null\n            if (config.status !== null) {\n              $(statusTarget).removeClass(\"bg-\" + status_2_color(config.status));\n              $(statusTarget)\n                .find('.btn-box-tool')\n                .removeClass(\"btn-\" + config.status);\n            }\n            if (value.options.status !== null) {\n              $(statusTarget).addClass(\"bg-\" + status_2_color(value.options.status));\n              $(statusTarget)\n                .find('.btn-box-tool')\n                .addClass('btn-' + value.options.status);\n            }\n\n            config.status = value.options.status;\n          }\n        }\n      }\n      // Don't apply to userBox and socialBox in AdminLTE2!!!\n      if (value.options.hasOwnProperty(\"solidHeader\")) {\n        // only update if config an new value are different\n        if (!isSocialCard && !isUserCard) {\n          if (value.options.solidHeader !== config.solidHeader) {\n            $(el).toggleClass(\"box-solid\");\n            config.solidHeader = value.options.solidHeader;\n          }\n        }\n      }\n      // To remove background explicitly set background = NULL in updateBox\n      if (value.options.hasOwnProperty(\"background\")) {\n        if (value.options.background !== config.background) {\n          var newBoxClass = \"bg-\";\n          // don't touch if null\n          if (config.background !== null && config.background !== undefined) {\n            // if gradient, the class has a gradient at the end!\n            newBoxClass = newBoxClass + config.background;\n            if (config.gradient) {\n              newBoxClass = newBoxClass + \"-gradient\";\n            }\n            // handle userBox\n            // for which we also have to toggle the header bg color\n            // and the box tools buttons color\n            if (isUserCard) {\n              var header = $(el).find(\".widget-user-header\");\n              $(header).toggleClass(newBoxClass);\n            }\n            $(el).toggleClass(newBoxClass);\n            $(el)\n              .find(\".btn-box-tool\")\n              .toggleClass(\"btn-\" + color_2_status(config.background));\n          }\n          if (value.options.background !== null) {\n            newBoxClass = newBoxClass + value.options.background;\n            if (config.gradient) {\n              newBoxClass = newBoxClass + \"-gradient\";\n            }\n            if (isUserCard) {\n              var header = $(el).find(\".widget-user-header\");\n              $(header).addClass(newBoxClass);\n            }\n            $(el).addClass(newBoxClass);\n            if (config.background === undefined && config.status !== undefined) {\n              $(el)\n              .find(\".btn-box-tool\")\n              .toggleClass(\"btn-\" + config.status);\n            } \n            $(el)\n              .find(\".btn-box-tool\")\n              .toggleClass(\"btn-\" + color_2_status(value.options.background));\n          }\n          config.background = value.options.background;\n        }\n      }\n      if (value.options.hasOwnProperty(\"width\")) {\n        if (value.options.width !== config.width) {\n          this._updateWidth(el, config.width, value.options.width);\n          config.width = value.options.width;\n        }\n      }\n      if (value.options.hasOwnProperty(\"height\")) {\n        if (value.options.height !== config.height) {\n          if (value.options.height === null) {\n            $(el)\n              .find(\".box-body\")\n              .css(\"height\", \"\");\n          } else {\n            $(el)\n              .find(\".box-body\")\n              .css(\"height\", value.options.height);\n          }\n\n          config.height = value.options.height;\n          // don't need to trigger resize since the output height\n          // is not controlled by the box size ...\n        }\n      }\n      if (value.options.hasOwnProperty(\"collapsible\")) {\n        if (value.options.collapsible !== config.collapsible) {\n          if (!value.options.collapsible) {\n            $(el)\n              .find('[data-widget = \"collapse\"]')\n              .remove();\n            config.collapsible = false;\n          } else {\n            // only add if no collapsible\n            if ($(el).find('[data-widget = \"collapse\"]').length === 0) {\n              $(el)\n                .find(\".box-tools.pull-right\")\n                .prepend(\n                  $(\n                    '<button class=\"btn btn-box-tool\" data-widget=\"collapse\"><i class=\"fa fa-minus\"></i></button>'\n                  )\n                );\n              config.collapsible = true;\n            }\n          }\n        }\n      }\n      if (value.options.hasOwnProperty(\"closable\")) {\n        if (value.options.closable !== config.closable) {\n          if (!value.options.closable) {\n            $(el)\n              .find('[data-widget = \"remove\"]')\n              .remove();\n            config.closable = false;\n          } else {\n            if ($(el).find('[data-widget = \"remove\"]').length === 0) {\n              $(el)\n                .find(\".box-tools.pull-right\")\n                .append(\n                  $(\n                    '<button class=\"btn btn-box-tool\" data-widget=\"remove\"><i class=\"fa fa-times\"></i></button>'\n                  )\n                );\n              config.closable = true;\n            }\n          }\n        }\n      }\n\n      // replace the old JSON config by the new one to update the input value\n      $(el)\n        .parent()\n        .find(\"script[data-for='\" + el.id + \"']\")\n        .replaceWith(\n          '<script type=\"application/json\" data-for=\"' +\n            el.id +\n            '\">' +\n            JSON.stringify(config) +\n            \"</script>\"\n        );\n    } else {\n      if (value === \"restore\") {\n        // only restore if not visible\n        if ($(el).css(\"display\") == \"none\") {\n          $(el).show();\n        } else {\n          console.warn(\"This box is already visible!\");\n        }\n      } else if (value === \"toggle\") {\n        if ($(el).css(\"display\") !== \"none\") {\n          $(el).toggleBox();\n        } else {\n          console.warn(\n            \"This box is not visible. It does not make sense to collapse it!\"\n          );\n        }\n      } else {\n        if ($(el).css(\"display\") !== \"none\") {\n          $(el).removeBox();\n        } else {\n          console.warn(\"This box is not visible!\");\n        }\n      }\n    }\n  },\n  receiveMessage: function(el, data) {\n    this.setValue(el, data);\n    $(el).trigger(\"change\");\n  },\n  subscribe: function(el, callback) {\n    // handle manual click on collapse button\n    $(el).on(\"click\", '[data-widget=\"collapse\"]', function(event) {\n      setTimeout(function() {\n        callback();\n      }, 550);\n    });\n\n    // handle manual click on remove button\n    $(el).on(\"click\", '[data-widget=\"remove\"]', function(event) {\n      setTimeout(function() {\n        callback();\n      }, 550);\n    });\n\n    // handle change event triggered in the setValue method\n    $(el).on(\"change\", function(event) {\n      setTimeout(function() {\n        callback();\n      }, 550);\n    });\n  },\n  unsubscribe: function(el) {\n    $(el).off(\".boxBinding\");\n  }\n});\n\nShiny.inputBindings.register(boxBinding, \"box-input\");\n\n// boxSidebarBinding\n// ------------------------------------------------------------------\n// This code creates an input binding for the boxPlus sidebar component\nvar boxSidebarBinding = new Shiny.InputBinding();\n$.extend(boxSidebarBinding, {\n  initialize: function(el) {\n    // erase default to avoid seeing moving sidebars on initialization\n    $(\".direct-chat-contacts, .direct-chat-messages\").css({\n      transition: \"transform .0s ease-in-out\"\n    });\n\n    var background = $(el).attr(\"data-background\")\n      ? $(el).attr(\"data-background\")\n      : \"#343a40\";\n    var width = $(el).attr(\"data-width\")\n      ? parseInt($(el).attr(\"data-width\"))\n      : 100;\n    var closeTranslationRate = (100 * 100) / width;\n    var contacts = $(el)\n      .closest(\".direct-chat\")\n      .find(\".direct-chat-contacts\");\n\n    // apply width and background\n    $(contacts).css({\n      background: `${background}`,\n      width: `${width}%`\n    });\n\n    // If start open, apply openTranslationRate else apply closeTranslationRate ...\n    if ($(el).attr(\"data-start-open\") === \"true\") {\n      var openTranslationRate = closeTranslationRate - 100;\n      $(contacts).css({ transform: `translate(${openTranslationRate}%, 0)` });\n    } else {\n      $(contacts).css({ transform: `translate(${closeTranslationRate}%, 0)` });\n    }\n\n    // Restore for better transitions\n    setTimeout(function() {\n      $(\".direct-chat-contacts, .direct-chat-messages\").css({\n        transition: \"transform .5s ease-in-out\"\n      });\n    }, 300);\n  },\n\n  find: function(scope) {\n    return $(scope).find('[data-widget=\"chat-pane-toggle\"]');\n  },\n\n  // Given the DOM element for the input, return the value\n  getValue: function(el) {\n    var boxWrapper = $(el).closest(\".box\");\n    return $(boxWrapper).hasClass(\"direct-chat-contacts-open\");\n  },\n\n  // see updateBoxSidebar\n  receiveMessage: function(el, data) {\n    $(el).trigger(\"click\");\n    $(el).trigger(\"shown\");\n  },\n\n  subscribe: function(el, callback) {\n    var self = this;\n    $(el).on(\"click\", function(e) {\n      var width = $(el).attr(\"data-width\")\n        ? parseInt($(el).attr(\"data-width\"))\n        : 100;\n      var closeTranslationRate = (100 * 100) / width;\n      var openTranslationRate = closeTranslationRate - 100;\n      // set a delay so that Shiny get the input value when the collapse animation\n      // is finished.\n      var target = e.currentTarget;\n      setTimeout(function(e = target) {\n        // apply correct translation rate depending on current state\n        var contacts = $(e)\n          .closest(\".direct-chat\")\n          .find(\".direct-chat-contacts\");\n        if (self.getValue(el)) {\n          $(contacts).css({\n            transform: `translate(${openTranslationRate}%, 0)`\n          });\n        } else {\n          $(contacts).css({\n            transform: `translate(${closeTranslationRate}%, 0)`\n          });\n        }\n        callback();\n      }, 10);\n    });\n  },\n\n  unsubscribe: function(el) {\n    $(el).off(\".boxSidebarBinding\");\n  }\n});\n\nShiny.inputBindings.register(boxSidebarBinding, \"box-sidebar-input\");\n\n// flipbox\n// ------------------------------------------------------------------\n// This code creates an input binding for the flipbox component\nvar flipBoxBinding = new Shiny.InputBinding();\n\n$.extend(flipBoxBinding, {\n  find: function(scope) {\n    return $(scope).find(\".flipbox\");\n  },\n  // Given the DOM element for the input, return the value\n  getValue: function(el) {\n    return $(el)\n      .find(\".card-front\")\n      .hasClass(\"active\");\n  },\n\n  setValue: function(el, value) {\n    var currentSide = $(el).find(\".active\");\n    if ($(el).data(\"rotate\") === \"hover\") {\n      if ($(currentSide).hasClass(\"card-front\")) {\n        $(currentSide).trigger(\"mouseenter\");\n      } else {\n        $(currentSide).trigger(\"mouseleave\");\n      }\n    } else if ($(el).data(\"rotate\") === \"click\") {\n      $(currentSide).trigger(\"click\");\n    }\n  },\n\n  // see updateAccordion\n  receiveMessage: function(el, data) {\n    this.setValue(el, data);\n  },\n  _clickOnFront: function(el) {\n    $(el)\n      .find(\".card-front\")\n      .css({\n        \"-webkit-transform\": \"perspective(1600px) rotateY(-180deg)\",\n        transform: \"perspective(1600px) rotateY(-180deg)\"\n      })\n      .toggleClass(\"active\");\n    $(el)\n      .find(\".card-back\")\n      .css({\n        \"-webkit-transform\": \"perspective(1600px) rotateY(0deg)\",\n        transform: \"perspective(1600px) rotateY(0deg)\"\n      })\n      .toggleClass(\"active\");\n  },\n  _clickOnBack: function(el) {\n    $(el)\n      .find(\".card-front\")\n      .css({ \"-webkit-transform\": \"\", transform: \"\" })\n      .toggleClass(\"active\");\n    $(el)\n      .find(\".card-back\")\n      .css({ \"-webkit-transform\": \"\", transform: \"\" })\n      .toggleClass(\"active\");\n  },\n  subscribe: function(el, callback) {\n    var self = this; // this will not work inside event listeners since it will\n    // refer to the element we clicked on and not the input binding object!!!\n\n    // use the data object to identify the trigger\n    if ($(el).data(\"rotate\") === \"hover\") {\n      $(el)\n        .find(\".card-front\")\n        .on(\"mouseenter\", function() {\n          self._clickOnFront(el);\n          callback();\n        });\n\n      $(el)\n        .find(\".card-back\")\n        .on(\"mouseleave\", function() {\n          self._clickOnBack(el);\n          callback();\n        });\n    } else if ($(el).data(\"rotate\") === \"click\") {\n      // click front\n      $(el).on(\"click\", \".card-front\", function(e) {\n        self._clickOnFront(el);\n        callback();\n      });\n\n      // click back\n      $(el).on(\"click\", \".card-back\", function(e) {\n        self._clickOnBack(el);\n        callback();\n      });\n    }\n  },\n\n  unsubscribe: function(el) {\n    $(el).off(\".flipBoxBinding\");\n  }\n});\n\nShiny.inputBindings.register(flipBoxBinding, \"flipbox-input\");\n","$(function() {\n  // boxSidebarBinding\n  // ------------------------------------------------------------------\n  // This code creates an input binding for the dashboard controlbar component\n  var controlbarBinding = new Shiny.InputBinding();\n\n  $.extend(controlbarBinding, {\n    find: function(scope) {\n      return $(scope).find(\".control-sidebar\");\n    },\n\n    // Given the DOM element for the input, return the value\n    getValue: function(el) {\n      // this handles the case where the controlbar is not collapsed at start\n      var controlbarCollapsed = $(el).attr('data-collapsed');\n      var overlay = $(\".control-sidebar\").attr(\"data-overlay\") === \"true\";\n      // We have to overwrite the existing options by the user provided.\n      $.AdminLTE.options.controlSidebarOptions.slide = overlay;\n      if (controlbarCollapsed === \"false\") {\n        $(\"[data-toggle='control-sidebar']\").click();\n        $(el).attr('data-collapsed', \"true\");\n        return true;\n      } else {\n        if (!overlay) {\n          return $(\"body\").hasClass(\"control-sidebar-open\"); \n        } else {\n          return $(el).hasClass(\"control-sidebar-open\");\n        }\n      }\n    },\n\n    // see updateControlbar\n    receiveMessage: function(el, data) {\n      $(\"[data-toggle='control-sidebar']\").click();\n    },\n\n    subscribe: function(el, callback) {\n      $(\"[data-toggle='control-sidebar']\").on(\"click\", function(e) {\n        callback();\n      });\n    },\n\n    unsubscribe: function(el) {\n      $(el).off(\".controlbarBinding\");\n    }\n  });\n\n  Shiny.inputBindings.register(controlbarBinding, \"controlbar-input\");\n\n  // This prevent box content from going outside their container \n  // when the control-bar is on push mode\n  $(\"[data-toggle='control-sidebar']\").on(\"click\",\n    function() {\n      if (!$.AdminLTE.options.controlSidebarOptions.slide) {\n        $(window).trigger(\"resize\"); \n      }\n  });\n\n  // hide the right sidebar toggle\n  // if no right sidebar is specified\n  var noControlbar = $(\".control-sidebar\").length === 0;\n  if (noControlbar) {\n    $(\"[data-toggle='control-sidebar']\").hide();\n  }\n\n  // hide the right sidebar toggle if the controlbar is disable\n  var disableControlbar = $(\".control-sidebar\").attr(\"data-show\");\n  if (disableControlbar === \"false\") {\n    $(\"[data-toggle='control-sidebar']\").hide();\n  }\n});\n","var ensureActivatedTab = function() {\n  var $tablinks = $(\".sidebar-menu a[data-toggle='tab']\");\n\n  // If there's a `data-start-selected` attribute and we can find a tab with\n  // that name, activate it.\n  var $startTab = $tablinks.filter(\"[data-start-selected='1']\");\n  if ($startTab.length === 0) {\n    // If no tab starts selected, use the first one, if present\n    $startTab = $tablinks.first();\n  }\n\n  // If there are no tabs, $startTab.length will be 0.\n  if ($startTab.length !== 0) {\n    $startTab.tab(\"show\");\n\n    // This is indirectly setting the value of the Shiny input by setting\n    // an attribute on the html element it is bound to. We cannot use the\n    // inputBinding's setValue() method here because this is called too\n    // early (before Shiny has fully initialized)\n    $(\".sidebarMenuSelectedTabItem\").attr(\n      \"data-value\",\n      $startTab.attr(\"data-value\")\n    );\n  }\n};\n\n$(function() {\n  // tabItemInputBinding\n  // ------------------------------------------------------------------\n  // Based on Shiny.tabItemInputBinding, but customized for tabItems in\n  // shinydashboard, which have a slightly different structure.\n  var tabItemInputBinding = new Shiny.InputBinding();\n  $.extend(tabItemInputBinding, {\n    find: function(scope) {\n      return $(scope).find(\".sidebarMenuSelectedTabItem\");\n    },\n    getValue: function(el) {\n      var value = $(el).attr(\"data-value\");\n      if (value === \"null\") return null;\n      return value;\n    },\n    setValue: function(el, value) {\n      var self = this;\n      var anchors = $(el)\n        .parent(\"ul.sidebar-menu\")\n        .find(\"li:not(.treeview)\")\n        .children(\"a\");\n      anchors.each(function() {\n        // eslint-disable-line consistent-return\n        if (self._getTabName($(this)) === value) {\n          $(this).tab(\"show\");\n          $(el).attr(\"data-value\", self._getTabName($(this)));\n          return false;\n        }\n      });\n    },\n    receiveMessage: function(el, data) {\n      if (data.hasOwnProperty(\"value\")) this.setValue(el, data.value);\n    },\n    subscribe: function(el, callback) {\n      // This event is triggered by deactivateOtherTabs, which is triggered by\n      // shown. The deactivation of other tabs must occur before Shiny gets the\n      // input value.\n      $(el).on(\"change.tabItemInputBinding\", function() {\n        callback();\n      });\n    },\n    unsubscribe: function(el) {\n      $(el).off(\".tabItemInputBinding\");\n    },\n    _getTabName: function(anchor) {\n      return anchor.attr(\"data-value\");\n    }\n  });\n\n  Shiny.inputBindings.register(\n    tabItemInputBinding,\n    \"shinydashboard.tabItemInput\"\n  );\n\n  // sidebarCollapsedInputBinding\n  // ------------------------------------------------------------------\n  // This keeps tracks of whether the sidebar is expanded (default)\n  // or collapsed\n  var sidebarCollapsedInputBinding = new Shiny.InputBinding();\n  $.extend(sidebarCollapsedInputBinding, {\n    find: function(scope) {\n      // This will also have id=\"sidebarCollapsed\"\n      return $(scope)\n        .find(\".main-sidebar\")\n        .first();\n    },\n    getValue: function(el) {\n      if ($(el).attr(\"id\") === \"sidebarCollapsed\") {\n        return $(el).attr(\"data-collapsed\") === \"true\";\n      } else {\n        return $(el).attr(\"data-collapsed\") === \"false\";\n      }\n    },\n    setValue: function(el, value) {\n      $(el).attr(\"data-collapsed\", value);\n    },\n    toggleValue: function(el) {\n      var current = this.getValue(el);\n      var newVal = current ? \"false\" : \"true\";\n      this.setValue(el, newVal);\n    },\n    receiveMessage: function(el, data) {\n      if (data.hasOwnProperty(\"value\")) this.setValue(el, data.value);\n      $(\"[data-toggle='offcanvas']\").click();\n    },\n    subscribe: function(el, callback) {\n      $(el).on(\"change.sidebarCollapsedInputBinding\", function() {\n        callback();\n      });\n    },\n    unsubscribe: function(el) {\n      $(el).off(\".sidebarCollapsedInputBinding\");\n    }\n  });\n  Shiny.inputBindings.register(\n    sidebarCollapsedInputBinding,\n    \"shinydashboard.sidebarCollapsedInputBinding\"\n  );\n\n  // sidebarmenuExpandedInputBinding\n  // ------------------------------------------------------------------\n  // This keeps tracks of what menuItem (if any) is expanded\n  $(\"section.sidebar a i\").click(function() {\n    if ($(this).hasClass(\"fa-angle-down\")) {\n      self = $(this);\n      setTimeout(function() {\n        self.removeClass(\"fa-angle-down\").addClass(\"fa-angle-left\");\n      }, 500);\n    }\n  });\n\n  var sidebarmenuExpandedInputBinding = new Shiny.InputBinding();\n  $.extend(sidebarmenuExpandedInputBinding, {\n    find: function(scope) {\n      // This will also have id=\"sidebarItemExpanded\"\n      return $(scope).find(\"section.sidebar\");\n    },\n    getValue: function(el) {\n      var $open = $(el).find(\"li ul.menu-open\");\n      var icon = $(el)\n        .find(\".treeview.active > a i\")\n        .eq(1);\n      if ($open.length === 1) {\n        $(icon)\n          .toggleClass(\"fa-angle-left\")\n          .addClass(\"fa-angle-down\");\n        return $open.attr(\"data-expanded\");\n      } else {\n        return null;\n      }\n    },\n    setValue: function(el, value) {\n      var $menuItem = $(el).find(\"[data-expanded='\" + value + \"']\");\n      // This will trigger actions defined by AdminLTE, as well as actions\n      // defined in sidebar.js.\n      $menuItem.prev().trigger(\"click\");\n    },\n    subscribe: function(el, callback) {\n      $(el).on(\"change.sidebarmenuExpandedInputBinding\", function() {\n        callback();\n      });\n    },\n    unsubscribe: function(el) {\n      $(el).off(\".sidebarmenuExpandedInputBinding\");\n    }\n  });\n  Shiny.inputBindings.register(\n    sidebarmenuExpandedInputBinding,\n    \"shinydashboard.sidebarmenuExpandedInputBinding\"\n  );\n\n  // Optionally disable sidebar (set through the `disable` argument\n  // to the `dashboardSidebar` function)\n  if ($(\"section.sidebar\").data(\"disable\")) {\n    $(\"body\").addClass(\"sidebar-collapse\");\n    $(\".navbar > .sidebar-toggle\").hide();\n  }\n\n  // toggle sidebar at start depending on the body class\n  var sidebarCollapsed = $(\".main-sidebar\").attr(\"data-collapsed\");\n  if (sidebarCollapsed === \"true\") {\n    $(\"body\").addClass(\"sidebar-collapse\");\n  }\n\n  // handle the sidebar partial collapse feature\n  var sidebarMinified = $(\".main-sidebar\").attr(\"data-minified\");\n  if (sidebarMinified === \"true\") {\n    $(\"body\").addClass(\"sidebar-mini\");\n  }\n\n  // Get the correct value for `input$sidebarCollapsed`, depending on\n  // whether or not the left offset on the sidebar is negative (hidden\n  // - so `input$sidebarCollapsed` should be TRUE) or 0 (shown - so\n  // `input$sidebarCollapsed` should be FALSE). That we know of,\n  // `$(\".main-sidebar\").is(\":visible\")` is always true, so there is\n  // no need to check for that.\n  // Determine whether the sidebar should be minified instead of fully collapsed\n  var sidebarCollapsedValue = function() {\n    if ($(\"body\").hasClass(\"sidebar-collapse\")) return true;\n    else return false;\n  };\n\n  // Whenever the sidebar changes from collapsed to expanded and vice versa,\n  // call this function, so that we can trigger the resize event on the rest\n  // of the window and also update the value for the sidebar's input binding.\n  var sidebarChange = function() {\n    // 1) Trigger the resize event (so images are responsive and resize)\n    $(window).trigger(\"resize\");\n\n    // 2) Update the value for the sidebar's input binding\n    var $obj = $(\".main-sidebar.shiny-bound-input\");\n    var inputBinding = $obj.data(\"shiny-input-binding\");\n    inputBinding.setValue($obj, sidebarCollapsedValue());\n    $obj.trigger(\"change\");\n  };\n\n  // Whenever the sidebar finishes a transition (which it does every time it\n  // changes from collapsed to expanded and vice versa), call sidebarChange()\n  $(\".main-sidebar\").on(\n    \"webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend\",\n    sidebarChange\n  );\n\n  // This fixes an edge case: when the app starts up with the sidebar already\n  // collapsed (either because the screen is small or because\n  // `dashboardSidebar(disable = TRUE`), make sure that `input$sidebarCollapsed`\n  // is set to `FALSE`. Whenever this is the case, `$(\".main-sidebar\").offset().left`\n  // is negative. That we know of, `$(\".main-sidebar\").is(\":visible\")` is always\n  // true, so there is no need to check for that.\n  if ($(\"body\").hasClass(\"sidebar-collapse\")) {\n    // This is indirectly setting the value of the Shiny input by setting\n    // an attribute on the html element it is bound to. We cannot use the\n    // inputBinding's setValue() method here because this is called too\n    // early (before Shiny has fully initialized)\n    $(\".main-sidebar\").attr(\"data-collapsed\", \"true\");\n  }\n\n  // Whenever we expand a menuItem (to be expandable, it must have children),\n  // update the value for the expandedItem's input binding (this is the\n  // tabName of the fist subMenuItem inside the menuItem that is currently\n  // expanded)\n  $(document).on(\"click\", \".treeview > a\", function() {\n    var $menu = $(this).next();\n    // If this menuItem was already open, then clicking on it again,\n    // should trigger the \"hidden\" event, so Shiny doesn't worry about\n    // it while it's hidden (and vice versa).\n    if ($menu.hasClass(\"menu-open\")) $menu.trigger(\"hidden\");\n    else if ($menu.hasClass(\"treeview-menu\")) $menu.trigger(\"shown\");\n\n    // need to set timeout to account for the slideUp/slideDown animation\n    var $obj = $(\"section.sidebar.shiny-bound-input\");\n    setTimeout(function() {\n      $obj.trigger(\"change\");\n    }, 600);\n  });\n\n  // This function handles a special case in the AdminLTE sidebar: when there\n  // is a sidebar-menu with items, and one of those items has sub-items, and\n  // they are used for tab navigation. Normally, if one of the items is\n  // selected and then a sub-item is clicked, both the item and sub-item will\n  // retain the \"active\" class, so they will both be highlighted. This happens\n  // because they're not designed to be used together for tab panels. This\n  // code ensures that only one item will have the \"active\" class.\n  var deactivateOtherTabs = function() {\n    // Find all tab links under sidebar-menu even if they don't have a\n    // tabName (which is why the second selector is necessary)\n    var $tablinks = $(\n      \".sidebar-menu a[data-toggle='tab'],\" + \".sidebar-menu li.treeview > a\"\n    );\n\n    // If any other items are active, deactivate them\n    $tablinks\n      .not($(this))\n      .parent(\"li\")\n      .removeClass(\"active\");\n\n    // Trigger event for the tabItemInputBinding\n    var $obj = $(\".sidebarMenuSelectedTabItem\");\n    var inputBinding = $obj.data(\"shiny-input-binding\");\n    if (typeof inputBinding !== \"undefined\") {\n      inputBinding.setValue($obj, $(this).attr(\"data-value\"));\n      $obj.trigger(\"change\");\n    }\n  };\n\n  $(document).on(\n    \"shown.bs.tab\",\n    '.sidebar-menu a[data-toggle=\"tab\"]',\n    deactivateOtherTabs\n  );\n\n  // When document is ready, if there is a sidebar menu with no activated tabs,\n  // activate the one specified by `data-start-selected`, or if that's not\n  // present, the first one.\n  ensureActivatedTab();\n});\n","$(function() {\n  \n  // box vertical overflow\n  $(\".content-wrapper\").css(\"overflow-y\", \"auto\");\n\n  // slide to top button\n  var $slideToTop = $(\"<div />\");\n\n  $slideToTop.html('<i class=\"fa fa-chevron-up\"></i>');\n\n  $slideToTop.css({\n    position: \"fixed\",\n    bottom: \"20px\",\n    right: \"25px\",\n    width: \"40px\",\n    height: \"40px\",\n    color: \"#eee\",\n    \"font-size\": \"\",\n    \"line-height\": \"40px\",\n    \"text-align\": \"center\",\n    \"background-color\": \"#222d32\",\n    cursor: \"pointer\",\n    \"border-radius\": \"5px\",\n    \"z-index\": \"99999\",\n    opacity: \".7\",\n    display: \"none\"\n  });\n\n  $slideToTop.on(\"mouseenter\", function() {\n    $(this).css(\"opacity\", \"1\");\n  });\n\n  $slideToTop.on(\"mouseout\", function() {\n    $(this).css(\"opacity\", \".7\");\n  });\n\n  $(\".wrapper\").append($slideToTop);\n\n  $(window).scroll(function() {\n    if ($(window).scrollTop() >= 150) {\n      if (!$($slideToTop).is(\":visible\")) {\n        $($slideToTop).fadeIn(500);\n      }\n    } else {\n      $($slideToTop).fadeOut(500);\n    }\n  });\n\n  $($slideToTop).click(function() {\n    $(\"html, body\").animate(\n      {\n        scrollTop: 0\n      },\n      500\n    );\n  });\n\n  // code to make sure that a carousel item is displayed\n  // when it is generated via a shiny Output function\n  // Thanks Dean Attali for the report\n  $(\".carousel\").on(\"slide.bs.carousel\", function() {\n    $(this).trigger(\"shown\");\n  });\n\n  /**\n   * List of all the available skins\n   *\n   * @type Array\n   */\n  var mySkins = [\n    \"skin-blue\",\n    \"skin-black\",\n    \"skin-red\",\n    \"skin-yellow\",\n    \"skin-purple\",\n    \"skin-green\",\n    \"skin-blue-light\",\n    \"skin-black-light\",\n    \"skin-red-light\",\n    \"skin-yellow-light\",\n    \"skin-purple-light\",\n    \"skin-green-light\"\n  ];\n\n  /**\n   * Store a new settings in the browser\n   *\n   * @param String name Name of the setting\n   * @param String val Value of the setting\n   * @returns void\n   */\n  function store(name, val) {\n    if (typeof Storage !== \"undefined\") {\n      localStorage.setItem(name, val);\n    } else {\n      window.alert(\n        \"Please use a modern browser to properly view this template!\"\n      );\n    }\n  }\n\n  /**\n   * Replaces the old skin with the new skin\n   * @param String cls the new skin class\n   * @returns Boolean false to prevent link's default action\n   */\n  changeSkin = function(cls) {\n    $.each(mySkins, function(i) {\n      $(\"body\").removeClass(mySkins[i]);\n    });\n\n    $(\"body\").addClass(cls);\n    store(\"skin\", cls);\n    return false;\n  };\n});\n","// navPills\n// ------------------------------------------------------------------\n// This code creates an input binding for the navPills component\nvar navPillsBinding = new Shiny.InputBinding();\n\n$.extend(navPillsBinding, {\n  find: function(scope) {\n    return $(scope).find(\".nav.nav-pills.nav-stacked\");\n  },\n  // Given the DOM element for the input, return the value\n  getValue: function(el) {\n    var activeItem =\n      $(el)\n        .find(\".active\")\n        .index() + 1;\n    if (activeItem === 0) {\n      $(el)\n        .children()\n        .first()\n        .addClass(\"active\");\n      activeItem = 1;\n    }\n    // returns the index of the active item from the R point of view\n    return activeItem;\n  },\n\n  setValue: function(el, value) {\n    $(el)\n      .children()\n      .eq(value - 1)\n      .trigger(\"click\");\n  },\n\n  // see updateControlbar\n  receiveMessage: function(el, data) {\n    this.setValue(el, data);\n  },\n\n  subscribe: function(el, callback) {\n    $(el).on(\"click\", \"li\", function(e) {\n      if (!$(this).hasClass(\"active\")) {\n        $(el)\n          .find(\".active\")\n          .removeClass(\"active\");\n        $(this).addClass(\"active\");\n        callback();\n      } else {\n        return;\n      }\n    });\n  },\n\n  unsubscribe: function(el) {\n    $(el).off(\".navPillsBinding\");\n  }\n});\n\nShiny.inputBindings.register(navPillsBinding, \"navPills-input\");\n","// menuOutputBinding\n// ------------------------------------------------------------------\n// Based on Shiny.htmlOutputBinding, but instead of putting the result in a\n// wrapper div, it replaces the origin DOM element with the new DOM elements,\n// copying over the ID and class.\nvar menuOutputBinding = new Shiny.OutputBinding();\n$.extend(menuOutputBinding, {\n  find: function(scope) {\n    return $(scope).find(\".shinydashboard-menu-output\");\n  },\n  onValueError: function(el, err) {\n    Shiny.unbindAll(el);\n    this.renderError(el, err);\n  },\n  renderValue: function(el, data) {\n    Shiny.unbindAll(el);\n\n    var html;\n    var dependencies = [];\n    if (data === null) {\n      return;\n    } else if (typeof data === \"string\") {\n      html = data;\n    } else if (typeof data === \"object\") {\n      html = data.html;\n      dependencies = data.deps;\n    }\n\n    var $html = $($.parseHTML(html));\n\n    // Convert the inner contents to HTML, and pass to renderHtml\n    Shiny.renderHtml($html.html(), el, dependencies);\n\n    // Extract class of wrapper, and add them to the wrapper element\n    el.className =\n      \"shinydashboard-menu-output shiny-bound-output \" + $html.attr(\"class\");\n\n    Shiny.initializeInputs(el);\n    Shiny.bindAll(el);\n    if ($(el).hasClass(\"sidebar-menu\")) ensureActivatedTab(); // eslint-disable-line\n  }\n});\nShiny.outputBindings.register(\n  menuOutputBinding,\n  \"shinydashboard.menuOutputBinding\"\n);\n","// This code creates acustom handler for userMessages\nShiny.addCustomMessageHandler(\"user-messages\", function(message) {\n  var id = message.id,\n    action = message.action,\n    content = message.body,\n    index = message.index;\n\n  // message text\n  // We use Shiny.renderHtml to handle the case where the user pass input/outputs in the updated content that require a new dependency not available in the\n  // page at startup.\n  if (content.hasOwnProperty(\"text\")) {\n    var text;\n    if (content.text.html === undefined) {\n      text = content.text;\n    } else {\n      text = Shiny.renderHtml(content.text.html, $([]), content.text.deps).html;\n    }\n  }\n\n  // unbind all\n  Shiny.unbindAll();\n\n  if (action === \"remove\") {\n    $(\"#\" + id)\n      .find(\".direct-chat-msg\")\n      .eq(index - 1)\n      .remove();\n  } else if (action === \"add\") {\n    var author = content.author,\n      date = content.date,\n      image = content.image,\n      type = content.type;\n\n    // build the new message\n    var newMessage =\n      '<div class=\"direct-chat-info clearfix\">' +\n      '<span class=\"direct-chat-name\">' +\n      author +\n      \"</span>\" +\n      '<span class=\"direct-chat-timestamp\" style=\"margin-left: 4px\">' +\n      date +\n      \"</span>\" +\n      \"</div>\" +\n      '<img class=\"direct-chat-img\" src=\"' +\n      image +\n      '\"/>' +\n      '<div class=\"direct-chat-text\">' +\n      text +\n      \"</div>\";\n\n    // build wrapper\n    var newMessageWrapper;\n    if (type === \"sent\") {\n      newMessageWrapper =\n        '<div class=\"direct-chat-msg right\">' + newMessage + \"</div>\";\n    } else {\n      newMessageWrapper =\n        '<div class=\"direct-chat-msg\">' + newMessage + \"</div>\";\n    }\n\n    // append message\n    $(\"#\" + id)\n      .find(\".direct-chat-messages\")\n      .append(newMessageWrapper);\n  } else if (action === \"update\") {\n    // today's date\n    var d = new Date();\n    var month = d.getMonth() + 1;\n    var day = d.getDate();\n    var today =\n      d.getFullYear() +\n      \"/\" +\n      ((\"\" + month).length < 2 ? \"0\" : \"\") +\n      month +\n      \"/\" +\n      ((\"\" + day).length < 2 ? \"0\" : \"\") +\n      day;\n\n    // we assume only text may be updated. Does not make sense to modify author/date\n\n    $(\"#\" + id)\n      .find(\".direct-chat-text\")\n      .eq(index - 1)\n      .replaceWith(\n        '<div class=\"direct-chat-text\"><small class=\"text-red\">(modified: ' +\n          today +\n          \")</small><br>\" +\n          text +\n          \"</div>\"\n      );\n  }\n\n  // Calls .initialize() for all of the input objects in all input bindings,\n  // in the given scope (document)\n  Shiny.initializeInputs();\n  Shiny.bindAll(); // bind all inputs/outputs\n});\n"]}
