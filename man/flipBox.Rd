% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flipBox.R
\name{flipBox}
\alias{flipBox}
\title{flipBox}
\usage{
flipBox(
  id,
  front_content,
  back_content,
  front_text = "More Info",
  back_text = "Back to Front"
)
}
\arguments{
\item{id}{the \code{flipBox} id}

\item{front_content}{ui for the front of the flip box}

\item{back_content}{ui for the back of the flip box}

\item{front_text}{text for front button}

\item{back_text}{text for back button}
}
\value{
HTML tagList
}
\description{
Create a flipping box based off of the AdminLTE flipBox.
}
\details{
To access the state of the flipbox use the input alias \code{input$<id>_value}.
  For example, if your flipBox's id is myawesomeflipbox, you can access its state via
  \code{input$myawesomeflipbox_value} where a 0 corresponds to the front, 1 the back, and NULL 
  indicates the input has not been set yet (i.e. the card has not flipped yet).
}
\section{Warning}{
 this function is experimental.
}

\examples{
library(shiny)
library(shinydashboard)
library(shinydashboardPlus)
shinyApp(
  ui = dashboardPage(
    dashboardHeader(),
    dashboardSidebar(),
    dashboardBody(
      flipBox(
        id = "id",
        front_content = div(
          class = "text-center",
          img(
            src = "https://image.flaticon.com/icons/svg/149/149076.svg",
            height = "300px",
            width = "100\%"
          )
        ),
        back_content = div(
          class = "text-center",
          height = "300px",
          width = "100\%",
          h1("Details...."),
          p("More information....")
        )
      )
    )
  ),
  
  server = function(input, output, session) {
  }
)
   
}
\references{
\url{https://rinterface.github.io/shinydashboardPlus/reference/flipBox.html}
}
